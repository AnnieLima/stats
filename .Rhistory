#inchamento LATERAL
inchamentol <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/ilateral.txt",
header = T)
x <- inchamentol$tratamento
y <- inchamentol$sw24
dadosl <- data.frame(x,y)
dic(
x,
y,
quali = TRUE,
nl = FALSE,
hvar = "bartlett",
sigT = 0.05,
sigF = 0.05
)
#absorção
absorcao <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/absorcao.txt",
header = T)
x <- absorcao$tratamento
y <- absorcao$sw24
dadosab <- data.frame(x,y)
dic(
x,
y,
quali = TRUE,
nl = FALSE,
hvar = "bartlett",
sigT = 0.05,
sigF = 0.05
)
library(multcompView)
#inchamento em espessura
inchamento <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/iespessura.txt",
header = T)
x <- inchamento$tratamento
y <- inchamento$sw2
dados <- data.frame(x,y)
str(dados)
modelo.anova <- lm(y ~ x, data= dados)
summary(modelo.anova)
anova(modelo.anova)
modelo.anova2 <- aov(y ~ x, data= dados)
medias <- with(dados,tapply(y,x,mean))
erro <- with(dados,
tapply(y,x,function(x) sqrt(var(x)/length(x))))
medias
erro
TukeyHSD(modelo.anova2)
plot(modelo.anova)
# What is the effect of the treatment on the value ?
model=lm( dados$y ~ dados$x )
ANOVA=aov(model)
# Tukey test to study each pair of treatment :
TUKEY <- TukeyHSD(x=ANOVA, 'dados$x', conf.level=0.95)
# Tuckey test representation :
plot(TUKEY , las=1 , col="brown")
# I need to group the treatments that are not different each other together.
generate_label_df <- function(TUKEY, x){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- TUKEY[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$y=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$y) , ]
return(Tukey.labels)
}
# Apply the function on my dataset
LABELS <- generate_label_df(TUKEY , "x")
# A panel of colors to draw each group with the same color :
my_colors <- c(
rgb(143,199,74,maxColorValue = 255),
rgb(242,104,34,maxColorValue = 255),
rgb(111,145,202,maxColorValue = 255)
)
# Draw the basic boxplot
a <- boxplot(data$y ~ data$x ,
ylim=c(min(data$y) ,
1.1*max(data$y)) ,
col=my_colors[as.numeric(LABELS[,1])] ,
ylab="Inchamento 2h" , main="")
# I want to write the letter over each box. Over is how high I want to write it.
over <- 0.1*max( a$stats[nrow(a$stats),] )
#Add the labels
text( c(1:nlevels(data$treatment)) ,
a$stats[nrow(a$stats),]+over ,
LABELS[,1]  ,
col=my_colors[as.numeric(LABELS[,1])] )
# What is the effect of the treatment on the value ?
model=lm(y~x )
ANOVA=aov(model)
barras <- barplot(medias,beside=T,ylab="Y",xlab="X")
arrows(x0=x,y0=medias-erro,
x1=x,y1=medias+erro,
angle=90,length=0.14,code=3)
barras <- barplot(medias,beside=T,ylab="Y",xlab="X"),
arrows(x0=x,y0=medias-erro,
x1=x,y1=medias+erro,
angle=90,length=0.14,code=3)
medias <- with(dados,tapply(y,x,mean))
erro <- with(dados,
tapply(y,x,function(x) sqrt(var(x)/length(x))))
barras <- barplot(medias,beside=T,ylab="Y",xlab="X")
arrows(x0=x,y0=medias-erro,
x1=x,y1=medias+erro,
angle=90,length=0.14,code=3)
TukeyHSD(modelo.anova2)
barras <- barplot(medias,beside=T,ylab="Y",xlab="X")+
arrows(x0=x,y0=medias-erro,
x1=x,y1=medias+erro,
angle=90,length=0.14,code=3)
View(dados)
## Gráficos
#What is the effect of the treatment on the value ?
model=lm(y~x )
ANOVA=aov(model)
# Tukey test to study each pair of treatment :
TUKEY <- TukeyHSD(x=ANOVA, x, conf.level=0.95)
## Inchamento e absorção de água 2h
library(multcompView)
#inchamento em espessura
inchamento <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/iespessura.txt",
header = T)
treatment <- inchamento$tratamento
value <- inchamento$sw2
data <- data.frame(x,y)
# What is the effect of the treatment on the value ?
model=lm( data$value ~ data$treatment )
## Inchamento e absorção de água 2h
library(multcompView)
#inchamento em espessura
inchamento <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/iespessura.txt",
header = T)
treatment <- inchamento$tratamento
value <- inchamento$sw2
data <- data.frame(treatment,value)
# What is the effect of the treatment on the value ?
model=lm( data$value ~ data$treatment )
ANOVA=aov(model)
# Tukey test to study each pair of treatment :
TUKEY <- TukeyHSD(x=ANOVA, 'data$treatment', conf.level=0.95)
# Tuckey test representation :
plot(TUKEY , las=1 , col="brown")
# I need to group the treatments that are not different each other together.
generate_label_df <- function(TUKEY, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- TUKEY[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
# Apply the function on my dataset
LABELS <- generate_label_df(TUKEY , "data$treatment")
# A panel of colors to draw each group with the same color :
my_colors <- c(
rgb(143,199,74,maxColorValue = 255),
rgb(242,104,34,maxColorValue = 255),
rgb(111,145,202,maxColorValue = 255)
)
# Draw the basic boxplot
a <- boxplot(data$value ~ data$treatment , ylim=c(min(data$value) ,
1.1*max(data$value)) ,
col=my_colors[as.numeric(LABELS[,1])] , ylab="value" , main="")
# I want to write the letter over each box. Over is how high I want to write it.
over <- 0.1*max( a$stats[nrow(a$stats),] )
#Add the labels
text( c(1:nlevels(data$treatment)) ,
a$stats[nrow(a$stats),]+over ,
LABELS[,1]  ,
col=my_colors[as.numeric(LABELS[,1])] )
# Draw the basic boxplot
a <- boxplot(data$value ~ data$treatment ,
1.1*max(data$value)) ,
col=my_colors[as.numeric(LABELS[,1])] ,
ylab="value" , main="")
# Draw the basic boxplot
a <- boxplot(data$value ~ data$treatment,
1.1*max(data$value),
col=my_colors[as.numeric(LABELS[,1])],
ylab="value" , main="")
# Draw the basic boxplot
a <- boxplot(data$value ~ data$treatment,
col=my_colors[as.numeric(LABELS[,1])],
ylab="value" , main="")
a
a %>%
filter_all(any_vars(is.na(.)))
## Inchamento e absorção de água 2h
library(multcompView)
#inchamento em espessura
inchamento <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/iespessura.txt",
header = T)
treatment <- inchamento$tratamento
value <- inchamento$sw2
data <- data.frame(treatment,value)
str(data)
# What is the effect of the treatment on the value ?
model=lm( data$value ~ data$treatment )
ANOVA=aov(model)
# Tukey test to study each pair of treatment :
TUKEY <- TukeyHSD(x=ANOVA, 'data$treatment', conf.level=0.95)
# Tuckey test representation :
plot(TUKEY , las=1 , col="brown")
# I need to group the treatments that are not different each other together.
generate_label_df <- function(TUKEY, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- TUKEY[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
# Apply the function on my dataset
LABELS <- generate_label_df(TUKEY , "data$treatment")
# A panel of colors to draw each group with the same color :
my_colors <- c(
rgb(143,199,74,maxColorValue = 255),
rgb(242,104,34,maxColorValue = 255),
rgb(111,145,202,maxColorValue = 255)
)
# Draw the basic boxplot
a <- boxplot(data$value ~ data$treatment,
col=my_colors[as.numeric(LABELS[,1])],
ylab="value" , main="")
# I want to write the letter over each box. Over is how high I want to write it.
over <- 0.1*max( a$stats[nrow(a$stats),] )
#Add the labels
text( c(1:nlevels(data$treatment)) ,
a$stats[nrow(a$stats),]+over ,
LABELS[,1]  ,
col=my_colors[as.numeric(LABELS[,1])] )
# Tukey test to study each pair of treatment :
TUKEY <- TukeyHSD(x=ANOVA, 'data$treatment', conf.level=0.95)
# Tuckey test representation :
plot(TUKEY , las=1 , col="brown")
# I need to group the treatments that are not different each other together.
generate_label_df <- function(TUKEY, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- TUKEY[[variable]][,5]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
# Apply the function on my dataset
LABELS <- generate_label_df(TUKEY , "data$treatment")
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- TUKEY[[variable]][,6]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
# I need to group the treatments that are not different each other together.
generate_label_df <- function(TUKEY, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- TUKEY[[variable]][,6]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
# Apply the function on my dataset
LABELS <- generate_label_df(TUKEY , "data$treatment")
# A panel of colors to draw each group with the same color :
my_colors <- c(
rgb(143,199,74,maxColorValue = 255),
rgb(242,104,34,maxColorValue = 255),
rgb(111,145,202,maxColorValue = 255)
)
# Draw the basic boxplot
a <- boxplot(data$value ~ data$treatment,
col=my_colors[as.numeric(LABELS[,1])],
ylab="value" , main="")
# Tukey test to study each pair of treatment :
TUKEY <- TukeyHSD(x=ANOVA, 'data$treatment', conf.level=0.95)
# Tuckey test representation :
plot(TUKEY , las=1 , col="brown")
# I need to group the treatments that are not different each other together.
generate_label_df <- function(TUKEY, variable){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- TUKEY[[variable]][,3]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$treatment=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$treatment) , ]
return(Tukey.labels)
}
# Apply the function on my dataset
LABELS <- generate_label_df(TUKEY , "data$treatment")
# A panel of colors to draw each group with the same color :
my_colors <- c(
rgb(143,199,74,maxColorValue = 255),
rgb(242,104,34,maxColorValue = 255),
rgb(111,145,202,maxColorValue = 255)
)
# Draw the basic boxplot
a <- boxplot(data$value ~ data$treatment,
col=my_colors[as.numeric(LABELS[,1])],
ylab="value" , main="")
# I want to write the letter over each box. Over is how high I want to write it.
over <- 0.1*max( a$stats[nrow(a$stats),] )
#Add the labels
text( c(1:nlevels(data$treatment)) ,
a$stats[nrow(a$stats),]+over ,
LABELS[,1]  ,
col=my_colors[as.numeric(LABELS[,1])] )
library(multcompView)
#inchamento em lateral
inchamento <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/ilateral.txt",
header = T)
x <- inchamento$tratamento
y <- inchamento$sw2
dados <- data.frame(x,y)
str(dados)
modelo.anova <- lm(y ~ x, data= dados)
summary(modelo.anova)
anova(modelo.anova)
modelo.anova2 <- aov(y ~ x, data= dados)
medias <- with(dados,tapply(y,x,mean))
erro <- with(dados,
tapply(y,x,function(x) sqrt(var(x)/length(x))))
barras <- barplot(medias,beside=T,ylab="Y",xlab="X")+
arrows(x0=x,y0=medias-erro,
x1=x,y1=medias+erro,
angle=90,length=0.14,code=3)
TukeyHSD(modelo.anova2)
plot(modelo.anova)
## Gráficos
#What is the effect of the treatment on the value ?
model=lm(y~x )
ANOVA=aov(model)
# Tukey test to study each pair of treatment :
TUKEY <- TukeyHSD(x=ANOVA, x, conf.level=0.95)
# Tuckey test representation :
plot(TUKEY , las=1 , col="brown")
# I need to group the treatments that are not different each other together.
generate_label_df <- function(TUKEY, x){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- TUKEY[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$y=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$y) , ]
return(Tukey.labels)
}
# Apply the function on my dataset
LABELS <- generate_label_df(TUKEY , "x")
# A panel of colors to draw each group with the same color :
my_colors <- c(
rgb(143,199,74,maxColorValue = 255),
rgb(242,104,34,maxColorValue = 255),
rgb(111,145,202,maxColorValue = 255)
)
# Draw the basic boxplot
a <- boxplot(data$y ~ data$x ,
ylim=c(min(data$y) ,
1.1*max(data$y)) ,
col=my_colors[as.numeric(LABELS[,1])] ,
ylab="Inchamento 2h" , main="")
# I want to write the letter over each box. Over is how high I want to write it.
over <- 0.1*max( a$stats[nrow(a$stats),] )
# I need to group the treatments that are not different each other together.
generate_label_df <- function(TUKEY, x){
# Extract labels and factor levels from Tukey post-hoc
Tukey.levels <- TUKEY[[variable]][,4]
Tukey.labels <- data.frame(multcompLetters(Tukey.levels)['Letters'])
#I need to put the labels in the same order as in the boxplot :
Tukey.labels$y=rownames(Tukey.labels)
Tukey.labels=Tukey.labels[order(Tukey.labels$y) , ]
return(Tukey.labels)
}
# Apply the function on my dataset
LABELS <- generate_label_df(TUKEY , x)
# A panel of colors to draw each group with the same color :
my_colors <- c(
rgb(143,199,74,maxColorValue = 255),
rgb(242,104,34,maxColorValue = 255),
rgb(111,145,202,maxColorValue = 255)
)
# Draw the basic boxplot
a <- boxplot(data$y ~ data$x ,
ylim=c(min(data$y) ,
1.1*max(data$y)) ,
col=my_colors[as.numeric(LABELS[,1])] ,
ylab="Inchamento 2h" , main="")
# I want to write the letter over each box. Over is how high I want to write it.
over <- 0.1*max( a$stats[nrow(a$stats),] )
## Inchamento e absorção de água 2h
library(multcompView)
#inchamento em lateral
inchamento <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/ilateral.txt",
header = T)
x <- inchamento$tratamento
y <- inchamento$sw2
dados <- data.frame(x,y)
str(dados)
tapply(x$y, mean)
#inchamento em espessura 2h
inchamento <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/iespessura.txt",
header = T)
#inchamento em espessura 2h
inchamento <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/iespessura.txt",
header = T)
x <- inchamento$tratamento
y <- inchamento$sw2
dados <- data.frame(x,y)
kruskal(y, x,
alpha = 0.05,
p.adj=c("bonferroni"),
group=TRUE, main = NULL,console=TRUE)
#absorção 2h
absorcao <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/absorcao.txt",
header = T)
x <- absorcao$tratamento
y <- absorcao$sw2
dadosab <- data.frame(x,y)
kruskal(y, x,
alpha = 0.05,
p.adj=c("bonferroni"),
group=TRUE, main = NULL,console=TRUE)
#inchamento em espessura 24h
inchamento <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/iespessura.txt",
header = T)
x <- inchamento$tratamento
y <- inchamento$sw24
dados <- data.frame(x,y)
kruskal(y, x,
alpha = 0.05,
p.adj=c("bonferroni"),
group=TRUE, main = NULL,console=TRUE)
source("C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/kruskall.R", encoding = 'UTF-8')
source("C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/ligacao_interna.R")
library(agricolae)
library(ExpDes.pt)
#Ligação Interna - Tração
tração <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/ligacao.txt",
header = T)
View(tração)
x <- tração$tratamento
y <- tração$tracao
dados <- data.frame(x,y)
dic(
x,
y,
quali = TRUE,
nl = FALSE,
hvar = "bartlett",
sigT = 0.05,
sigF = 0.05
)
kruskal(y, x,
alpha = 0.05,
p.adj=c("bonferroni"),
group=TRUE, main = NULL,console=TRUE)
#Ligação Interna - MOR
módulo <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/ligacao.txt",
header = T)
x <- módulo$tratamento
y <- módulo$mor
data <- data.frame(x,y)
dic(
x,
y,
quali = TRUE,
nl = FALSE,
hvar = "bartlett",
sigT = 0.05,
sigF = 0.05
)
x <- módulo$tratamento
y <- módulo$MOR
data <- data.frame(x,y)
dic(
x,
y,
quali = TRUE,
nl = FALSE,
hvar = "bartlett",
sigT = 0.05,
sigF = 0.05
)
me <- read.table(
"C:/Users/Annie de Lima/Downloads/Estatística/stat_debs/massa_paineis.txt",
header = T)
View(me)
x <- me$tratamento
y <- me$me
dados <- data.frame(x,y)
dic(
x,
y,
quali = TRUE,
nl = FALSE,
hvar = "bartlett",
sigT = 0.05,
sigF = 0.05
)
